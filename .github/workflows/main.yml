name: CI / CD

on:
  push:
    tags: V* # V를 앞글자로 가지는 태그가 push 될 때 해당 workflow 실행 - ex) V2, V3

env:
  ECR_REGISTRY: 533267380391.dkr.ecr.ap-northeast-2.amazonaws.com
  ECR_REPOSITORY: redis
  IMAGE_TAG: ${{ github.sha }}}

jobs:
  build:
    runs-on: ubuntu-latest 

    steps:
      - name: Checkout 
        uses: actions/checkout@v2

      - name: Configure AWS credentials 
        uses: aws-actions/configure-aws-credentials@v1 
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR 
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1 

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        run: |
          docker build -t ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }} .
          docker push ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
          
  deploy:
    needs: build
    runs-on: [self-hosted, label-ecr-test]

    steps:
      - name: Configure AWS credentials 
        uses: aws-actions/configure-aws-credentials@v1 
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR 
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1 

      - name: Pull image from Amazon ECR and restart container
        run: |
          docker pull ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
          docker stop test_con || true
          docker rm test_con || true
          docker run -d --name test_con -p 8080:8080 --restart unless-stopped ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
