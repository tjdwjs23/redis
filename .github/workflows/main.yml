name: CI / CD

on:
  push:
    tags: V* # V를 앞글자로 가지는 태그가 push 될 때 해당 workflow 실행 - ex) V2, V3

env:
  ECR_REGISTRY: 533267380391.dkr.ecr.ap-northeast-2.amazonaws.com
  ECR_REPOSITORY: redis
  IMAGE_TAG: ${{ github.sha }}}

jobs:
  build:
    runs-on: ubuntu-latest 

    steps:
      - name: Checkout 
        uses: actions/checkout@v2
        
      - name: Set up JDK 17 # JDK 17 셋업
        uses: actions/setup-java@v1
        with:
          java-version: 17
          
      - uses: actions/checkout@v2
      - run: mkdir ./src/main/resources
      - run: touch ./src/main/resources/application.yml
      - run: echo "${{ secrets.APPLICATION }}" > ./src/main/resources/application.yml #  github secrets에 암호화되어 저장된 APPLICATION secret파일 설정
      - uses: actions/upload-artifact@v2
        with:
          name: application.yml
          path: ./src/main/resources/application.yml

      - name: Grant execute permission for gradlew # gradlew 사용 권한 부여
        run: chmod 777 ./gradlew
        shell: bash

      - name: Clean build test with Gradle # clean build test
        run: ./gradlew clean build test
        shell: bash

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR 
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1 

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        run: |
          docker build -t redis .
          docker tag redis:latest 533267380391.dkr.ecr.ap-northeast-2.amazonaws.com/redis:latest
          docker push 533267380391.dkr.ecr.ap-northeast-2.amazonaws.com/redis:latest
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
          
  deploy:
    needs: build
    runs-on: [self-hosted, linux, x64]

    steps:
      - name: Configure AWS credentials 
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR 
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1 

      - name: Pull image from Amazon ECR and restart container
        run: |
          docker pull 533267380391.dkr.ecr.ap-northeast-2.amazonaws.com/redis:latest
          docker stop test_con || true
          docker rm test_con || true
          docker run -d --name test_con -p 8080:8080 --restart unless-stopped 533267380391.dkr.ecr.ap-northeast-2.amazonaws.com/redis:latest

